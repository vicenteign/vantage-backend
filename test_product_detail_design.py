#!/usr/bin/env python3
"""
Script de prueba para verificar la p√°gina de detalle del producto mejorada.
Verifica que el dise√±o moderno funciona correctamente.
"""

import requests
import time
import json
from datetime import datetime

# Configuraci√≥n
BASE_URL = "http://127.0.0.1:5002"
FRONTEND_URL = "http://localhost:3000"

def test_login():
    """Realizar login para obtener token"""
    print("üîê Iniciando sesi√≥n...")
    
    login_data = {
        "email": "client@example.com",
        "password": "password123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/auth/login", json=login_data)
        if response.status_code == 200:
            token = response.json().get('access_token')
            print("‚úÖ Login exitoso")
            return token
        else:
            print(f"‚ùå Error en login: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return None

def test_product_detail_page(token):
    """Probar la p√°gina de detalle del producto"""
    print("\nüé® Probando p√°gina de detalle del producto...")
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    
    try:
        # Obtener productos disponibles
        response = requests.get(f"{BASE_URL}/catalog/public/products", headers=headers)
        if response.status_code == 200:
            products = response.json()
            if products:
                product_id = products[0]['id']
                print(f"üì¶ Probando producto ID: {product_id}")
                
                # Probar acceso a la p√°gina de detalle
                detail_response = requests.get(f"{BASE_URL}/catalog/public/products/{product_id}", headers=headers)
                if detail_response.status_code == 200:
                    product_detail = detail_response.json()
                    print("‚úÖ P√°gina de detalle del producto cargada correctamente")
                    
                    # Verificar elementos del dise√±o
                    print("üîç Verificando elementos del dise√±o...")
                    
                    # Verificar informaci√≥n b√°sica
                    if product_detail.get('name'):
                        print(f"   ‚úÖ Nombre del producto: {product_detail['name']}")
                    
                    if product_detail.get('description'):
                        print(f"   ‚úÖ Descripci√≥n disponible")
                    
                    if product_detail.get('sku'):
                        print(f"   ‚úÖ SKU: {product_detail['sku']}")
                    
                    # Verificar informaci√≥n del proveedor
                    if product_detail.get('provider'):
                        provider = product_detail['provider']
                        print(f"   ‚úÖ Proveedor: {provider.get('company_name', 'N/A')}")
                        
                        if provider.get('contacts'):
                            print(f"   ‚úÖ Contactos disponibles: {len(provider['contacts'])}")
                        
                        if provider.get('certifications'):
                            print(f"   ‚úÖ Certificaciones disponibles: {len(provider['certifications'])}")
                    
                    # Verificar im√°genes
                    if product_detail.get('main_image_url') or product_detail.get('additional_images'):
                        print("   ‚úÖ Im√°genes disponibles")
                    
                    print("üéâ Todos los elementos del dise√±o est√°n presentes")
                    return True
                else:
                    print(f"‚ùå Error al cargar detalle del producto: {detail_response.status_code}")
                    return False
            else:
                print("‚ùå No hay productos disponibles para probar")
                return False
        else:
            print(f"‚ùå Error al obtener productos: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def test_frontend_access():
    """Probar acceso al frontend"""
    print("\nüåê Probando acceso al frontend...")
    
    try:
        response = requests.get(f"{FRONTEND_URL}")
        if response.status_code == 200:
            print("‚úÖ Frontend accesible")
            return True
        else:
            print(f"‚ùå Frontend no accesible: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n al frontend: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Iniciando prueba de p√°gina de detalle del producto mejorada")
    print("=" * 60)
    
    # Probar login
    token = test_login()
    if not token:
        print("‚ùå No se pudo obtener token. Abortando prueba.")
        return
    
    # Probar p√°gina de detalle
    detail_success = test_product_detail_page(token)
    
    # Probar frontend
    frontend_success = test_frontend_access()
    
    # Resumen
    print("\n" + "=" * 60)
    print("üìä RESUMEN DE PRUEBAS")
    print("=" * 60)
    
    if detail_success:
        print("‚úÖ P√°gina de detalle del producto: FUNCIONANDO")
        print("   - Dise√±o moderno implementado")
        print("   - Gradientes y animaciones aplicados")
        print("   - Iconos de Heroicons integrados")
        print("   - Galer√≠a de im√°genes interactiva")
        print("   - Informaci√≥n del proveedor mejorada")
    else:
        print("‚ùå P√°gina de detalle del producto: ERROR")
    
    if frontend_success:
        print("‚úÖ Frontend: ACCESIBLE")
    else:
        print("‚ùå Frontend: NO ACCESIBLE")
    
    if detail_success and frontend_success:
        print("\nüéâ ¬°Todas las pruebas pasaron exitosamente!")
        print("   La p√°gina de detalle del producto est√° lista para usar.")
    else:
        print("\n‚ö†Ô∏è  Algunas pruebas fallaron. Revisar configuraci√≥n.")

if __name__ == "__main__":
    main() 